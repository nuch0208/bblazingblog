@page "/admin/managecategories"
@using BlazingBlog.Components

@inject CategoryService CategoryService
@inject IJSRuntime Js

<div class="container">
    <div class="d-flex justify-content-between align-item-denter">
        <h3>Manag Category</h3>
        <button class="btn btn-primary btn-sm" //@onclick="OpenCategoryFormAsync">+ Add new Category</button>
    </div>
    <hr />
    <table class="table">
        <tbody>
        <thead>
            <tr>
                <th>#</th>
                <th>Id</th>
                <th>Name</th>
                <th>Slug</th>
                
            </tr>
        </thead>
            @if (_loading)
            {
                <tr>
                    <td colspan="4">
                        Loading cateories....
                    </td>
                </tr>
            }
             else if(!_loading && (_categories is null || _categories.Any()))
            {
                <tr>
                    <td colspan="4">
                        No categories found.
                    </td>
                </tr>
            }
            else 
            {
                int sno =1;
                foreach(var category in _categories)
                {
                    <tr>
                        <td>@sno</td>
                        <td>@category.Id</td>
                        <td>@category.Name</td>
                        <td>@category.Slug</td>
                    </tr>
                    sno++;
                }
            }

        </tbody>
    </table>
</div>
<dialog id="_categoriesFormDialogId">
    <SaveCategoryForm OnSaveCategory="OnSaveCategory" OnCloseForm="CloseCategoryFormAsync"/>
</dialog>
<style type="text.css">
    dialog{
        padding:0;
        border: 2px solid var(--color--purple);
    }
</style>
@code{
    private const string _categoriesFormDialogId = "category-form";
    private bool _loading = false;
    private IEnumerable<Category>? _categories = null;
    
    protected override async Task OnInitializedAsync()
    {
        await LoadCategoriesAsync();
    }
    private async Task LoadCategoriesAsync()
    {
       _loading = true;
       try
       {
        _categories = await CategoryService.GetCategoriesAsync();
       }
       finally
       {
            _loading = false;
       }
        
    }
      private async Task OpenCategoryFormAsync() =>
        await Js.InvokeVoidAsync("window.openModal", _categoriesFormDialogId);
    private async Task CloseCategoryFormAsync() =>
    await Js.InvokeVoidAsync("window.closeModal", _categoriesFormDialogId);

    private async Task OnSaveCategory(MethodResult saveCategoryResult)
    {
        if(saveCategoryResult.Status)
        {
            //Categrory save successfully
            await AlertAsyn("Category save successfully");
            await LoadCategoriesAsync();
            await CloseCategoryFormAsync();
        }
        else
        {
            //there was some error in saving category
            await AlertAsyn(saveCategoryResult.ErrorMessage!);
        }
    }
    private async Task AlertAsyn(string message)
    {
        await Js.InvokeVoidAsync("window.alert",message);
    }
}
