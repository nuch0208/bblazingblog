@page "/posts/{slug}"

@inject BlogPostService BlogPostService;
@inject CategoryService CategoryService

<PageTitle>@post.Title | BlazingBlog</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-sm-9">
            @if (notFound)
            {
                <div class="d-flex justify-content-center flex-coloum align-items-center" style="min-height: 260px">
                    <h3>Not Found</h3>
                        <NavLink href="" class="btn btn-primary">Click here to see the Latest blog post</NavLink> 
                </div>
            }
            else if(post?.Id > 0)
            {
                var color = Utilities.GetRandomColorClass();
                var categoryTitle = $"{post.CategoryName} Blog Post";
                var categoryPostsLink = $"/c/{post.Category.Slug}/Posts";
                <h1 class="fs-1 bg-@color tesx-white p-5 rounded">@post.Title</h1>
                
                <small>
                    <label>
                        <NavLink href="@categoryPostsLink" class="text-decoration-none" title="@categoryTitle">@post.CategoryName</NavLink>
                    </label>
                    <label>
                        @post.PublishedOn!.Value.ToShortDateString()
                    </label>
                </small>
                <p class-"fs-6">@post.Introduction</p>
                <hr  />
                <div class="main-content">
                    @((MarkupString)post.Content)
                </div>
            }
            else
            {
                <p>Fetching blog post....</p>
            }
            
        </div>
         <div class="col-sm-3">
              @* <h3>Categories</h3>
            <hr />
            <ul class="list-unstyled">
                @foreach(var category in categories)
                {
                    var categoryPostsLink = $"/c/{category.Slug}/posts";
                    <li class="mb-1 border-bottom p-1">
                        <NavLink href="@categoryPostsLink" class="text-decoration-none fs-6 py-2 text-truncate">@category.Name</NavLink>
                    </li>
                }
            </ul> *@
            <CategoriesBox />
            
        </div>
    </div>
</div>

@code {

public string Slug{ get; set;}
 @* private IEnumerable<Category> categories = Enumerable.Empty<Category>(); *@
private BlogPost? post = new();
private bool notFound = false;

protected override async Task OnInitializedAsync()
{
    if(!string.IsNullOrWhiteSpace(Slug))
    {
        var dbBlog = await BlogPostService.GetPostBySlugAsync(Slug);
        if(dbBlog is null)
        {
            notFound = true;
        }
        else
        {
            post = dbBlog;
        }
    }
        @* if (!categories.Any())
            categories = await CategoryService.GetCategoriesAsync(); *@
}
}